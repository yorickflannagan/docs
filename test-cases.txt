R/O sessions:
	R/W access to session objects
	R/O access to token objects
R/W sessions: full access to all objects
Unlogged user: access to public objects
Logged user: access to public and private objects

|-------------------------------------------------------------------------------------------------------|
|	Type of object			|	R/O Public	|	R/W Public	|	R/O User	|	R/W User	|	R/W SO	|
|-------------------------------------------------------------------------------------------------------|
|	Public session object 	|	R/W			|	R/W			|	R/W			|	R/W			|	R/W		|
|-------------------------------------------------------------------------------------------------------|
|	Private session object	|				|				|	R/W			|	R/W			|			|
|-------------------------------------------------------------------------------------------------------|
|	Public token object		|	R/O			|	R/W			|	R/O			|	R/W			|	R/W		|
|-------------------------------------------------------------------------------------------------------|
|	Private token object	|				|				|	R/O			|	R/W			|			|
|-------------------------------------------------------------------------------------------------------|

Object creation:
	supply a value for an invalid attribute: CKR_ATTRIBUTE_TYPE_INVALID
	supply an invalid value for a valid attribute: CKR_ATTRIBUTE_VALUE_INVALID
	supply a value for a read-only attribute: CKR_ATTRIBUTE_READ_ONLY
	supply insufficient attributes: CKR_TEMPLATE_INCOMPLETE
	supply inconsistent attribute values: CKR_TEMPLATE_INCONSISTENT

Attribute validation
	Check if CKA_CERTIFICATE_CATEGORY can change by C_SetAttributeValue
	Check if CKA_SUBJECT is mandatory in certificate creation
	Check if only CKA_ID, CKA_ISSUER, and CKA_SERIAL_NUMBER are modifiable after certificate creation
	Check if CKA_KEY_TYPE, CKA_LOCAL, and CKA_KEY_GEN_MECHANISM are always read-only
	CKA_SENSITIVE cannot change to CK_FALSE
	CKA_EXTACTABLE cannot change to CK_TRUE


TODO:
	Include CKM_RSA_PKCS_KEY_PAIR_GEN as a supported mechanism; flags: only CKF_GENERATE_KEY_PAIR
	Check exported functions to mechanisms
	Check if mutex functions returns only CKR_GENERAL_ERROR or CKR_HOST_MEMORY on error
	What happens if the same attribute is supplied more than once with different values? CKR_TEMPLATE_INCONSISTENT?
	PIN initialization: check if Firefox initializes PIN as described in NSS
	Check CKA_PRIVATE default value during object creation
	See CKA_TRUSTED objects
	How to enforce CKA_ALWAYS_AUTHENTICATE attribute CK_TRUE value? It can be set to CK_TRUE only if CKA_PRIVATE is CK_TRUE. Re-authentication occurs by calling C_Login with userType set to CKU_CONTEXT_SPECIFIC immediately after a cryptographic operation using the key has been initiated (e.g. after C_SignInit).
	Check if C_Login supports CKU_CONTEXT_SPECIFIC
	Check if a function failure causes token state inconsistency. In this case, must return CKR_GENERAL_ERROR
	Review ulDeviceError: it should be used for errors not covered by Cryptoki
	Review C_GetFunctionStatus and C_CancelFunction
	Check return of CKR_DATA_INVALID in C_Sign. CKR_DATA_LEN_RANGE has higher priority
	Check if CK_KEY_TYPE (CKR_KEY_TYPE_INCONSISTENT) and CKA_SIGN (CKR_KEY_FUNCTION_NOT_PERMITTED) attributes are verified by C_SignInit
	Check if C_Sign may return CKR_OPERATION_NOT_INITIALIZED after checking
	Check if C_Login may return CKR_USER_PIN_NOT_INITIALIZED
	Review: on CKR_BUFFER_TOO_SMALL return, *pulBufLen must be set to required value

Tests
	C_Initialize
		CKR_CRYPTOKI_ALREADY_INITIALIZED
		CKR_NEED_TO_CREATE_THREADS
	C_Finalize
		CKR_CRYPTOKI_NOT_INITIALIZED
	C_GetTokenInfo
		Check CKF_TOKEN_INITIALIZED, CKF_LOGIN_REQUIRED
		Check CKF_USER_PIN_INITIALIZED 
	C_GetMechanismList
		Check CKM_RSA_PKCS_KEY_PAIR_GEN, CKM_RSA_PKCS
	C_GetMechanismInfo
		Check CKM_RSA_PKCS_KEY_PAIR_GEN, CKM_RSA_PKCS
	C_InitPIN
		Validate with C_GetTokenInfo ! CKF_USER_PIN_INITIALIZED
		CKR_PIN_LEN_RANGE
		CKR_SESSION_READ_ONLY
		CKR_SESSION_HANDLE_INVALID
		Validate with C_GetTokenInfo CKF_USER_PIN_INITIALIZED
	C_SetPIN
		CKR_PIN_INCORRECT
		CKR_PIN_LEN_RANGE
		CKR_SESSION_READ_ONLY
		Check if all private objects are still accessible

		C_OpenSession
		CKR_SLOT_ID_INVALID
	C_CloseSession
		Check if all session objects were destroyed
		(See below)
	C_CloseAllSessions
		Check if login state was reseted
	C_Login
		CKR_USER_TYPE_INVALID
		CKR_OPERATION_NOT_INITIALIZED (CKU_CONTEXT_SPECIFIC outside a C_Sign)
		CKR_PIN_INCORRECT
		CKR_USER_ALREADY_LOGGED_IN
		CKR_USER_PIN_NOT_INITIALIZED
	C_Logout
		CKR_USER_NOT_LOGGED_IN
		Call C_Logout after a C_SignInit e check result. The operation is still active?
		Check if a handle to a private object is still valid

	C_CreateObject
		CKR_ATTRIBUTE_READ_ONLY
		CKR_ATTRIBUTE_TYPE_INVALID
		CKR_ATTRIBUTE_VALUE_INVALID
		CKR_SESSION_READ_ONLY
		CKR_TEMPLATE_INCOMPLETE
		CKR_TEMPLATE_INCONSISTENT
		CKR_USER_NOT_LOGGED_IN
		CKO_PRIVATE_KEY:
			Check CKA_LOCAL, CKA_ALWAYS_SENSITIVE, and CKA_NEVER_EXTRACTABLE after creation
			Check if created with minimal template can C_Sign
			Check CKA_PRIVATE consistency with CKA_SENSITIVE
		CKO_PUBLIC_KEY:
			Create objects with minimal template 
		CKO_CERTIFICATE:
			Check template with CKA_VALUE and CKA_URL
			Check CKA_SUBJECT
	C_DestroyObject
		CKR_SESSION_READ_ONLY
		Try to destroy a private object after a C_Logout
	C_GetAttributeValue
		CKR_ATTRIBUTE_SENSITIVE
		CKR_ATTRIBUTE_TYPE_INVALID
	C_SetAttributeValue
		CKR_ATTRIBUTE_READ_ONLY
		CKR_ATTRIBUTE_TYPE_INVALID
		CKR_ATTRIBUTE_VALUE_INVALID
		CKR_SESSION_READ_ONLY
		CKR_TEMPLATE_INCONSISTENT
		CKR_USER_NOT_LOGGED_IN
	C_FindObjectsInit
		CKR_ATTRIBUTE_TYPE_INVALID
		CKR_ATTRIBUTE_VALUE_INVALID
	C_FindObjects
		CKR_OPERATION_NOT_INITIALIZED
		CKR_SESSION_HANDLE_INVALID
		ulMaxObjectCount < pulObjectCount
		ulMaxObjectCount > pulObjectCount
		ulMaxObjectCount = pulObjectCount
		ulCount == 0
		Try to find private objects without C_Login

	C_SignInit
		CKR_MECHANISM_INVALID
		CKR_OPERATION_ACTIVE
		CKR_USER_NOT_LOGGED_IN
		Try to use an object handle of a CKO_PUBLIC_KEY
	C_Sign
		Use SSL challenge
		Use TLS challenge
		CKR_DATA_INVALID
		CKR_OPERATION_NOT_INITIALIZED
		CKR_USER_NOT_LOGGED_IN
	C_GenerateKeyPair
		CKR_ATTRIBUTE_READ_ONLY
		CKR_ATTRIBUTE_TYPE_INVALID
		CKR_ATTRIBUTE_VALUE_INVALID
		CKR_MECHANISM_INVALID
		CKR_OPERATION_ACTIVE
		CKR_SESSION_READ_ONLY
		CKR_TEMPLATE_INCOMPLETE
		CKR_TEMPLATE_INCONSISTENT
		CKR_USER_NOT_LOGGED_IN
		pPublicKeyTemplate inconsistent with pPrivateKeyTemplate

